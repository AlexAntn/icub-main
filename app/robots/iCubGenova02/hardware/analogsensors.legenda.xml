
<!--
    marco.accame: on 31 mar 2016
    
    LEGENDA:
    
    The group SERVICE contains whatever is needed to configure the devices embObjMais, embObjStrain and embObjInertials w/ respect to:
    1. description of all the sensors which the robot has connected to the ETH board associated to the device (unique ID, gyros or accel or ..., brand or type of chip, location on CAN or on board).
    2. which of the above sensors the device tells the ETH board to configure and use,
    3. configuration sent to the ETH board and by this latter to the sensor (such as: acquisition rate, etc.)
    

    The group SERVICE contains three sections:
    
    - type              string with values from eOmn_serv_type_t [eomn_serv_AS_mais, eomn_serv_AS_strain, eomn_serv_AS_inertials]. it tells what service we are describing
    < PROPERTIES >      it is a group which contains the invariant characteristics of the service. its content depends on the type.
    < SETTINGS >        it is a group which tells what inside PROPERTIES the device wants to use and how.
    
    where PROPERTIES and SETTINGS have the following characteristics:
    
    < PROPERTIES
    
      < CANBOARDS        
        it is a group which describes the can boards (typically only one kind) used in the service. see its fields.
        
        - type                  string with values from eObrd_type_t [eobrd_mais, eobrd_strain, eobrd_mtb, ...]. 
        
        - useGlobalParams       FOR FUTURE USE. boolean param [true, false] which tells if for the following we must use global params defined elsewhere (if defined) or to
                                parse and use the following ... PROTOCOL and FIRMWARE
                                
        < PROTOCOL              
          if its value is (0, 0) it means that the ETH board shall not complain about can protocol version of the attached can boards.
          otherwise it uses the rule of ... major must be equal, detected minor must be equal or higher.
          As an example: if we have CANBOARDS.type = enumCanBrdMAIS, and PROTOCOL = (1, 2), then:
          any detected board which is a MAIS and have detected.protocol.major = 1 and detected.protocol.minor 2, 3, 4, etc is OK. 
          
          Thus, (1, 4) is OK, but (1, 1) or (3, 2) are not OK.                                
          - major               major number [0, 255]
          - minor               minor number [0, 255]          
          PROTOCOL >   
          
        < FIRMWARE              
          if its value is (0, 0, 0) it means that the ETH board shall not complain about firmware version of the attached can board.
          otherwise it uses the rule of .... major and minor must be equal, detected build must be equal or higher. 
          
          - major               major number [0, 255]
          - minor               minor number [0, 255]
          - build               build number [0, 255]         
          FIRMWARE >  

        important: if both PROTOCOL and FIRMWARE are zero, then the ETH board shall not even search for the CAN board presence. that is a trick to avoid
        that the remote ETH board complains about a missing board.    
        note: think of how manage eobrd_mc4 boards, where the minor number can be different ... and the important is the build number      
          
        CANBOARDS >
        
      < SENSORS        
        it is a group which contains the supported sensors. in case of strain and mais there is only one sensor. in case of inertials there is a list of them

        - id                    string which uniquely identifies the sensor in the robot.
                                The use of this variable is for high level identification. For instance, it is the string published by embObjInertials to allow a match of the sensor with the CAD. 
                                
        - type                  string with values from eOas_sensor_t [eoas_strain, eoas_mais, eoas_accel_mtb_int, eoas_accel_mtb_ext, eoas_gyros_mtb_ext, ... ]
                                The use of this variable is for initialisation inside the ETH board. 
                                If SERVICE.type is eomn_serv_AS_mais or eomn_serv_AS_strain, it is clear that SENSORS.type must be eoas_strain or eoas_mais. 
                                However, for SERVICE.type = eomn_serv_AS_inertials there can be multiple sensors of different types (eoas_accel_mtb_int, ...).  
                                
        - location              string which contains the address of the sensor. the string has the format PREFIX:number, where PREFIX = [CAN1, CAN2, ETH]
                                and number is 0, 1, 2, 3, etc. Example: if we want to tell that the sensor is on CAN1 at address 12 we use CAN1:12
                                The use of this variable is for initialisation inside the ETH board. 
                                Some CAN boards as the eobrd_mc4 may also have a sub-index 0/1, hence their extended location is for instance CAN1:6:1 or CAN1:6:0 
                                
        SENSORS >        
        
      PROPERTIES >    
     
    < SETTINGS    
      it is a group which contains what sensors we want to deal with. they can be all those which are in PROPERTIES or ... just a list of the chosen ones.
      it also contains some configurations which are common to all sensors.
      
      - acquisitionRate         [0, 100] expressed in ms. If 0 then we just don't ask the ETH board to program the sensors to acquire data and the output
                                published in the YARP port is just ... 0.0f
      - enabledSensors          it is list of all or some of the strings in SENSORS.id. 
                                A short-cut for enabling all sensors in SENSORS.id is to use enabledSensors = enumALL.                            
              
      SETTINGS >    
    
  -->
  


