<application>
<name>episodic and procedural memory demo</name>

<module>
   <name>imageSource</name>
   <parameters>--context proceduralMemory/conf</parameters>
   <node>icub1</node>
   <tag>imageSource</tag>
</module>

<module>
   <name>logPolarTransform</name>
   <parameters>--context proceduralMemory/conf</parameters>
   <node>icub1</node>
   <tag>logPolarTransform</tag>
</module>

<module>
   <name>logPolarTransform</name>
   <parameters>--name inverseLogPolarTransformA --direction LOGPOLAR2CARTESIAN --context proceduralMemory/conf</parameters>
   <node>icub1</node>
   <tag>inverseLogPolarTransformA</tag>
</module>

<module>
   <name>logPolarTransform</name>
   <parameters>--name inverseLogPolarTransformB --direction LOGPOLAR2CARTESIAN --context proceduralMemory/conf</parameters>
   <node>icub1</node>
   <tag>inverseLogPolarTransformB</tag>
</module>

<module>
   <name>yarpview</name>
   <parameters>--name /input_image --x 0 --y 10 --synch</parameters>
   <node>icub1</node>
   <tag>input_image</tag>
</module>

<module>
   <name>yarpview</name>
   <parameters>--name /recalled_image --x 320 --y 10 --synch</parameters>
   <node>icub1</node>
   <tag>recalled_image</tag>
</module>

<module>
   <name>yarpview</name>
   <parameters>--name /weights_image --x 640 --y 10 --synch</parameters>
   <node>icub1</node>
   <tag>weights_image</tag>
</module>


<module>
   <name>proceduralMemory</name>
   <parameters>--context proceduralMemory/conf</parameters>
   <node>icub1</node>
   <tag>proceduralMemory</tag>
</module>


<module>
   <name>episodicMemory</name>
   <parameters>--context proceduralMemory/conf --offline 1</parameters>
   <node>icub1</node>
   <tag>episodicMemory</tag>
</module>



 
<connection>
   <from>/icub/cam/left</from>
   <to>/logPolarTransform/image:i</to>
   <protocol>tcp</protocol>
</connection>

<connection>
   <from>/logPolarTransform/image:o</from>
   <to>/episodicMemory/image:i</to>
   <protocol>tcp</protocol>
</connection>

<connection>
   <from>/logPolarTransform/image:o</from>
   <to>/inverseLogPolarTransformA/image:i</to>
   <protocol>tcp</protocol>
</connection>

<connection>
  <from>/inverseLogPolarTransformA/image:o</from>
  <to>/input_image</to>
  <protocol>tcp</protocol>
</connection>


<connection>
   <from>/episodicMemory/image:o</from>
   <to>/inverseLogPolarTransformB/image:i</to>
   <protocol>tcp</protocol>
</connection>


<connection>
   <from>/inverseLogPolarTransformB/image:o</from>
   <to>/recalled_image</to>
   <protocol>tcp</protocol>
 </connection>


<connection>
   <from>/episodicMemory/imageId:o</from>
   <to>/proceduralMemory/imageId:i</to>
   <protocol>tcp</protocol>
 </connection>


<connection>
   <from>/attentionSelection/o:position</from>
   <to>/episodicMemory/action:i</to>
   <protocol>tcp</protocol>
 </connection>

 
<connection>
   <from>/proceduralMemory/weights:o</from>
   <to>/weights_image</to>
   <protocol>tcp</protocol>
</connection>

</application>
