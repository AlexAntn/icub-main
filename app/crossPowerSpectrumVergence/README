vergenceWithRectification.xml.template & vergenceWithoutRectification.xml.template
==================================================================================

Overview
--------
These two applications demonstate the use of the crossPowerSpectrumVergence module,
one using the rectification module to remove epipolar distortion and align the principal
points of the two images, the other operating on unprocessed images acquired directly 
by the cameras. 
 
The crossPowerSpectrumVergence module takes images from the left and right 
cameras, computes the vergence required so that the principal rays of the 
two iCub camera intersect on a region of interest in the scene.  
The module outputs the disparity of the selected region in normalized coordinates (-1, +1).  
This output is connected to the /dis port of the controlGaze2 module (e.g. /icub/controlgaze/dis)
which effects the motor control on the iCub head.

Please refer to the crossPowerSpectrumVergence module documentation 
for details on the various module parameters:
http://eris.liralab.it/iCub/dox/html/group__icub__crossPowerSpectrumVergence.html

What to Do
----------
Edit the xml.template files to suit your own platform.  You will need to change at least
the node name (icub1 in the template).  You may also need to change the parameters
for the controlGaze2 module. All of the files required by controlGaze2 
(specifically controlGaze2.ini and icubEyes.ini) can be found in the 
crossPowerSpectrumVergence/conf directory.  However, you will have to customize
the paths in the parameter values in the xml file.   The intrinsic parameters of 
the cameras are provided in icubEyes.ini.  However, since every camera is different, 
you should calibrate the iCub cameras on your robot using the camcalibconf module
to generate your own icubEyes.ini configuration file.  
There is a sample application to do this camera calibration in 
$ICUB_ROOT/app/cameraCalibration.

You should also make sure that the port dependencies are satisfied.
Note that the vergenceWithRectification application has three port dependencies:

/icub/cam/left 
/icub/cam/right 
/icub/head/state:o 

while the vergenceWithoutRectification has just two:

/icub/cam/left 
/icub/cam/right 

The first two stream images from the iCub cameras.
The third is used stream the state of the encoders and is used by the rectification
module to extract the extrinsic parameters of the cameras and, specificially, 
to compute the current vergence of the cameras.

Adjusting the crossPowerSpectrumVergence Module Parameters
----------------------------------------------------------
The crossPowerSpectrumVergence.ini configuration file specifies several
parameters that are required to effect stable vergence control.

These parameters and their default values are as follows.

std_dev                         20
threshold                       20
filter_radius                    2
number_of_maxima                 2
non_maxima_suppression_radius    5

Setting these parameter values correctly for your configuration is important.
Here are some notes based on experience with using crossPowerSpectrumVergence.
 
- std_dev
This is the standard deviation of the Gaussian mask used to apodize the input images; 
the apodized images are output to /left_image:o and /right_image:o for visualization.
This weighting function - or apodization function - is critical to the stability 
of the technique.   It effects a centre weighting and is applied before the 
cross-power spectrum disparity estimation.  The value is specified as as percentage 
of the image width, i.e. 20 implies a standard deviation of 20% of the image width.  
The lower the value the greater the centre weighting. A value of 100 implies no 
centre weighting.

- threshold
The threshold for detection of maxima in the cross-power spectrum.  
It is specified as an integer percentage of the global maximum.  
If it is set too low, spurious maxima will be detected.
 
- filter_radius 
The radius in pixels of a filter used to amplify local maxima.

- number_of_maxima  
The number of local maxima that are to be detected.  This corresponds to
the number image regions of a given disparity or depth to be considered when
selecting a region on which to verge.

- non_maxima_suppression_radius 
The radius in pixels of the non-maxima suppression filter; this is used to ensure
that we don't select candidate regions that are too similar in depth.

It is important to understand the policy for selecting maxima and, hence, the 
region on which to verge.   

The possibilities are:

1. Choose the largest maximum; this is probably going to correspond to 
the object that occupies the largest amount of the field of view 
(or greatest energy in the image)

2. Choose the maximum that is closest to the centre; the corresponds 
to the object that is closest to the current fixation distance

3. Choose the maximum that is furthest to the LEFT of the cross-power spectrum; 
this corresponds to the object that is closest to the cameras.

Option 3 is the only option currently implemented. 

Tuning the Behaviour of the Module
----------------------------------
Vergence control works well if there are a small number of clear disparities
from which to choose.  If you find that the maxima (identified in the output image 
by cross-hairs) are unstable or jumping about, you can simply set the parameter 
number_of_maxima in the ini file to 1. In this case, only one global maximum is 
identified and the vergence is based on this, even if it doesn't correspond ot the
closest object.  If you want to keep the policy of finding two objects and choosing the 
closest for vergence, you can also increase the value of the threshold parameter 
in the ini file.  It's default value is 20, meaning that the second maximum has to be 
at least 20% of the global maximum.  A higher value, e.g. 40, will mean that 
the second maximum will not be detected and the second unstable crosshair won't 
appear.

One final and very important point: this application depends on controlGaze2 
to do the motor control. It is important to ensure that the vergenceGain parameter 
in icubControlGaze2.ini  is approximately 300 or less.   If it is significantly greater
than this value then the control is effectively underdamped and overshoot occurs. 
This leads to instability and a 'hunting' behaviour, and sometimes complete loss of control,
typically with the camera going 'cross-eyed' (with a very large vergence angle). 
This issue is particularly important as the control cycle period decreases (i.e. as 
the frame rate increases).  If it is significantly less than 300, then the control
is effectively overdamped and it takes several iterations for the cameras to verge on 
the region of interest.

David Vernon
13/10/2009


