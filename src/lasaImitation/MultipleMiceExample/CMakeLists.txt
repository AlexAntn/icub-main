SET(PM_PROJECT_NAME MultipleMiceExample)
SET(PM_PROJECT_TYPE Executable)
SET(PM_PROJECT_DEPS ICUB MultipleMiceDriver)

cmake_minimum_required(VERSION 2.6)

set(CMAKE_VERBOSE_MAKEFILE false)

IF (NOT DEFINED PM_PROJECT_ROOT)
  SET(PM_PROJECT_ROOT ${CMAKE_CURRENT_SOURCE_DIR}/..)
ENDIF (NOT DEFINED PM_PROJECT_ROOT)

SET(PM_INC_BASE include)
SET(PM_SRC_BASE src)
SET(PM_LIB_BASE lib)
SET(PM_BIN_BASE bin)



PROJECT(${PM_PROJECT_NAME})

SET(PM_LIB_PATH  ${CMAKE_CURRENT_SOURCE_DIR}/${PM_LIB_BASE})
SET(PM_BIN_PATH  ${CMAKE_CURRENT_SOURCE_DIR}/${PM_BIN_BASE})
SET(PM_SRC_PATH  ${CMAKE_CURRENT_SOURCE_DIR}/${PM_SRC_BASE})
SET(PM_INC_PATH  ${CMAKE_CURRENT_SOURCE_DIR}/${PM_INC_BASE})

SET(PM_LIB_GPATH  ${PM_PROJECT_ROOT}/${PM_LIB_BASE})
SET(PM_BIN_GPATH  ${PM_PROJECT_ROOT}/${PM_BIN_BASE})
SET(PM_INC_GPATH  ${PM_PROJECT_ROOT}/${PM_INC_BASE})

FILE(GLOB PM_SOURCEFILES ${PM_SRC_PATH}/*.cpp ${PM_SRC_PATH}/*.c)
FILE(GLOB PM_HEADERFILES ${PM_INC_PATH}/*.h)

INCLUDE_DIRECTORIES(${PM_INC_PATH} ${PM_INC_GPATH})

IF (${PM_PROJECT_TYPE} STREQUAL Library)
  MAKE_DIRECTORY(${PM_LIB_PATH})
  MAKE_DIRECTORY(${PM_INC_GPATH}/${PM_PROJECT_NAME})

  SET(LIBRARY_OUTPUT_PATH ${PM_LIB_PATH})
  
  FOREACH(DEP_NAME ${PM_PROJECT_DEPS})
    FIND_PACKAGE(${DEP_NAME} REQUIRED)
  ENDFOREACH(DEP_NAME)


  ADD_LIBRARY(${PM_PROJECT_NAME} STATIC ${PM_SOURCEFILES} ${PM_HEADERFILES})
  ADD_CUSTOM_COMMAND(TARGET ${PM_PROJECT_NAME} POST_BUILD COMMAND cp ${PM_HEADERFILES} ${PM_INC_GPATH}/${PM_PROJECT_NAME}/)

ELSEIF (${PM_PROJECT_TYPE} STREQUAL Executable)
  MAKE_DIRECTORY(${PM_BIN_PATH})
  MAKE_DIRECTORY(${PM_BIN_GPATH})
  SET(EXECUTABLE_OUTPUT_PATH ${PM_BIN_PATH})

  FOREACH(DEP_NAME ${PM_PROJECT_DEPS})
    FIND_PACKAGE(${DEP_NAME} REQUIRED)	
  ENDFOREACH(DEP_NAME)

  ADD_EXECUTABLE(${PM_PROJECT_NAME} ${PM_SOURCEFILES} ${PM_HEADERFILES})
    
  FOREACH(DEP_NAME ${PM_PROJECT_DEPS})
    TARGET_LINK_LIBRARIES(${PM_PROJECT_NAME} ${${DEP_NAME}_LIBRARIES})
  ENDFOREACH(DEP_NAME)
  IF (PM_PROJECT_LINK_LIBS)
    FOREACH(DEP_NAME ${PM_PROJECT_LINK_LIBS})
      TARGET_LINK_LIBRARIES(${PM_PROJECT_NAME} ${DEP_NAME})
    ENDFOREACH(DEP_NAME)
  ENDIF (PM_PROJECT_LINK_LIBS)

  ADD_CUSTOM_COMMAND(TARGET ${PM_PROJECT_NAME} POST_BUILD COMMAND cp ${PM_BIN_PATH}/${PM_PROJECT_NAME} ${PM_BIN_GPATH}/)

ELSE (${PM_PROJECT_TYPE} STREQUAL Library)
  MESSAGE(FATAL_ERROR "Variable PM_PROJECT_TYPE <${PM_PROJECT_TYPE}> not set...")

ENDIF (${PM_PROJECT_TYPE} STREQUAL Library)


