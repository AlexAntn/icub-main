
set(LIBNAME HandCtrl)

if(NOT LIBHANDCTRL_FOUND)

    message(STATUS "Using LIBHANDCTRLConfig.cmake")
    
    set(LIB_DIR ${LIBHANDCTRL_DIR})
    set(LIBHANDCTRL_INCLUDE_DIRS ${LIB_DIR}/src)
    
    
    if(NESTED_BUILD)
    
      set(LIBHANDCTRL_LIBRARIES ${LIBNAME})
    
    else(NESTED_BUILD)
    
      find_library(LIBHANDCTRL_LIBRARIES ${LIBNAME} ${ICUB_DIR}/lib ${LIB_DIR})  
    
      if(NOT LIBHANDCTRL_LIBRARIES)
    
        find_library(LIBHANDCTRL_LIBRARIES_RELEASE ${LIBNAME} 
    		         ${ICUB_DIR}/lib/Release ${LIB_DIR}/Release NO_DEFAULT_PATH)
        find_library(LIBHANDCTRL_LIBRARIES_DEBUG ${LIBNAME} 
    		         ${ICUB_DIR}/lib/Debug ${LIB_DIR}/Debug NO_DEFAULT_PATH)
    
        if(LIBHANDCTRL_LIBRARIES_RELEASE AND NOT LIBHANDCTRL_LIBRARIES_DEBUG)
           set(LIBHANDCTRL_LIBRARIES ${LIBHANDCTRL_LIBRARIES_RELEASE} CACHE PATH "release version of library" FORCE)
        endif(LIBHANDCTRL_LIBRARIES_RELEASE AND NOT LIBHANDCTRL_LIBRARIES_DEBUG)
    
        if(LIBHANDCTRL_LIBRARIES_DEBUG AND NOT LIBHANDCTRL_LIBRARIES_RELEASE)
           set(LIBHANDCTRL_LIBRARIES ${LIBHANDCTRL_LIBRARIES_DEBUG} CACHE PATH "debug version of library" FORCE)
        endif(LIBHANDCTRL_LIBRARIES_DEBUG AND NOT LIBHANDCTRL_LIBRARIES_RELEASE)
    
        if(LIBHANDCTRL_LIBRARIES_DEBUG AND LIBHANDCTRL_LIBRARIES_RELEASE)
           set(LIBHANDCTRL_LIBRARIES optimized ${LIBHANDCTRL_LIBRARIES_RELEASE}
    			                 debug ${LIBHANDCTRL_LIBRARIES_DEBUG} CACHE PATH "debug and release version of library" FORCE)
        endif(LIBHANDCTRL_LIBRARIES_DEBUG AND LIBHANDCTRL_LIBRARIES_RELEASE)
    
        mark_as_advanced(LIBHANDCTRL_LIBRARIES_RELEASE)
        mark_as_advanced(LIBHANDCTRL_LIBRARIES_DEBUG)
    
      endif(NOT LIBHANDCTRL_LIBRARIES)
    
    endif(NESTED_BUILD)
    
    
    # Add YARP dependencies
    find_package(YARP)
    set(LIBHANDCTRL_LIBRARIES ${LIBHANDCTRL_LIBRARIES} ${YARP_LIBRARIES})
    
	if(${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} LESS 2.6)

      if(LIBHANDCTRL_INCLUDE_DIRS AND LIBHANDCTRL_LIBRARIES)
        SET(LIBHANDCTRL_FOUND 1)
      else(LIBHANDCTRL_INCLUDE_DIRS AND LIBHANDCTRL_LIBRARIES)
        SET(LIBHANDCTRL_FOUND 0)
      endif(LIBHANDCTRL_INCLUDE_DIRS AND LIBHANDCTRL_LIBRARIES)

	else(${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} LESS 2.6)

    	find_package_handle_standard_args(LIBHANDCTRL DEFAULT_MSG LIBHANDCTRL_INCLUDE_DIRS LIBHANDCTRL_LIBRARIES)

    endif(${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} LESS 2.6)
    
    
endif(NOT LIBHANDCTRL_FOUND)



