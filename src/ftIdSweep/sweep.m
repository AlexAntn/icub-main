
function main()
clear all
close all
clc
d='rightArm2';

[data,l]=chooseFile(d);
time=[0:0.01:(0.01*(length(data)-1))];
fig=figure
h1=plotyy(time(1:1600),data(1:1600,2),time(1:1600),data(1:1600,3));
ll=legend('Input PWM','equivalentOutput torqe')

set(gcf,'Color',[1,1,1])
xl=xlabel('time [s]');
set(xl,'Interpreter','latex','FontSize',10);
set(ll,'Interpreter','latex','FontSize',10);
grid on


fig=figure();
[H,f] = transferFCT(data,l);
h=semilogx(f,20*log10(abs(H(1:end))),'b','LineWidth',2),axis([1 20 -70 -40]),
set(h,'LineWidth',2), hold on
% d='rightArm';
% [data,l]=chooseFile(d);
% [H,f] = transferFCT(data,l);
% semilogx(f,20*log10(abs(H(1:end))),'--r'),axis([1 20 -90 0]), hold on

d='rightArm';
[data,l]=chooseFile(d);
[H,f] = transferFCT(data,l);
semilogx(f,20*log10(abs(H(1:end))),'r','LineWidth',2),axis([1 20 -70 -40]), hold on

d='rightArm3';
[data,l]=chooseFile(d);
[H,f] = transferFCT(data,l);
semilogx(f,20*log10(abs(H(1:end))),'g','LineWidth',2),axis([1 20 -70 -40]), hold on
% d='rightArm2';
% [data,l]=chooseFile(d);
% [H,f] = transferFCT(data,l);
% semilogx(f,20*log10(abs(H(1:end))),'r'),axis([1 20 -90 0]), hold on
set(gcf,'Color',[1,1,1])
yl=ylabel('module of $\frac{\tau}{PWM}$');
set(yl,'Interpreter','latex','FontSize',10);
xl=xlabel('frequency [Hz]');
set(xl,'Interpreter','latex','FontSize',10);
ll=legend('shoulder up','shoulder down','hand at $90^{\circ}$')
set(ll,'Interpreter','latex','FontSize',10);
grid on
% % % 
    function [H,f] = transferFCT(data,L)
        dt=data(1:end,1);
        dt=mean(dt);
        Fs = 1/dt;                    % Sampling frequency 
        t = (0:L/2-1)*dt;                % Time vector
        NFFT = 2^nextpow2(L/2); % Next power of 2 from length of y
        f = Fs/2*linspace(0,1,NFFT/2+1);
        index=0;
        maxA=0;
        f=[];
        for i=1:20
            ftData_i=data(((L*(i-1)+1)+L/2-1:L*i),:);
            ftData(:,:,i)=ftData_i;
            fftData_i = 2*fft(ftData_i,NFFT)/L;
            fftData(:,:,i)=fftData_i;
            [maxA,index] = max(2*abs(fftData_i(1:NFFT/2+1,2)));
            IN=fftData_i(index,2);
            OUT=fftData_i(index,3);
            H(i)=OUT/IN;
            f=[f;i];
        end
    end

    function [data,l]=chooseFile(d)
        if(strcmp(d,'leftArm3'))
            disp('left')
            data=importfile('ftSweepData_leftarm4.dat');
            l=402;
        elseif(strcmp(d,'leftArm2'))
            disp('left2')
            data=importfile('ftSweepData_leftarm2.dat');
            l=402;
        elseif(strcmp(d,'rightArm2'))
            disp('right2')
            l=402;
            data=importfile('ftSweepData_rightarm2.dat');
        elseif(strcmp(d,'rightArm3'))
            data=importfile('ftSweepData_leftarm4.dat');
            l=402;
            disp('right')
        elseif(strcmp(d,'leftArm'))
            disp('left')
            data=importfile('ftSweepData_leftarm.dat');
            l=402;
        elseif(strcmp(d,'rightArm'))
            disp('right')
            data=importfile('ftSweepData_rightarm.dat');
            l=402;
        end
    end

    function [newData1] = importfile(fileToRead1)
    %IMPORTFILE(FILETOREAD1)
    %  Imports data from the specified file
    %  FILETOREAD1:  file to read

    %  Auto-generated by MATLAB on 24-Feb-2010 17:02:18

    % Import the file
    rawData1 = importdata(fileToRead1);

    % For some simple files (such as a CSV or JPEG files), IMPORTDATA might
    % return a simple array.  If so, generate a structure so that the output
    % matches that from the Import Wizard.
    [~,name] = fileparts(fileToRead1);
%     newData1.(genvarname(name)) = rawData1;
    newData1 = rawData1;
    end
end
