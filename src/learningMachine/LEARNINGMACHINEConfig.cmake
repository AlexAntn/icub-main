IF(NOT LEARNINGMACHINE_FOUND)
    MESSAGE(STATUS "Using LEARNINGMACHINEConfig.cmake")
    
    SET(LIB_DIR ${LEARNINGMACHINE_DIR})
    SET(LEARNINGMACHINE_INCLUDE_DIRS ${LIB_DIR}/include)
    
    IF(NESTED_BUILD)
        SET(LEARNINGMACHINE_LIBRARIES learningMachine)
    ELSE(NESTED_BUILD)
      FIND_LIBRARY(LEARNINGMACHINE_LIBRARIES learningMachine ${ICUB_DIR}/lib ${LIB_DIR})  
      IF(NOT LEARNINGMACHINE_LIBRARIES)
        FIND_LIBRARY(LEARNINGMACHINE_LIBRARIES_RELEASE learningMachine 
    		         ${ICUB_DIR}/lib/Release ${LIB_DIR}/Release NO_DEFAULT_PATH)
        FIND_LIBRARY(LEARNINGMACHINE_LIBRARIES_DEBUG learningMachine 
    		         ${ICUB_DIR}/lib/Debug ${LIB_DIR}/Debug NO_DEFAULT_PATH)
    
        IF(LEARNINGMACHINE_LIBRARIES_RELEASE AND NOT LEARNINGMACHINE_LIBRARIES_DEBUG)
           SET(LEARNINGMACHINE_LIBRARIES_RELEASE ${LEARNINGMACHINE_LIBRARIES_RELEASE})
           SET(LEARNINGMACHINE_LIBRARIES ${LEARNINGMACHINE_LIBRARIES_RELEASE} CACHE PATH "release version of library" FORCE)
        ENDIF(LEARNINGMACHINE_LIBRARIES_RELEASE AND NOT LEARNINGMACHINE_LIBRARIES_DEBUG)
    
        IF(LEARNINGMACHINE_LIBRARIES_DEBUG AND NOT LEARNINGMACHINE_LIBRARIES_RELEASE)
           SET(LEARNINGMACHINE_LIBRARIES_DEBUG ${LEARNINGMACHINE_LIBRARIES_DEBUG})
           SET(LEARNINGMACHINE_LIBRARIES ${LEARNINGMACHINE_LIBRARIES_DEBUG} CACHE PATH "debug version of library" FORCE)
        ENDIF(LEARNINGMACHINE_LIBRARIES_DEBUG AND NOT LEARNINGMACHINE_LIBRARIES_RELEASE)
    
        IF(LEARNINGMACHINE_LIBRARIES_DEBUG AND LEARNINGMACHINE_LIBRARIES_RELEASE)
           SET(LEARNINGMACHINE_LIBRARIES_RELEASE ${LEARNINGMACHINE_LIBRARIES_RELEASE})
           SET(LEARNINGMACHINE_LIBRARIES_DEBUG ${LEARNINGMACHINE_LIBRARIES_DEBUG})
           SET(LEARNINGMACHINE_LIBRARIES optimized ${LEARNINGMACHINE_LIBRARIES_RELEASE}
    			                 debug ${LEARNINGMACHINE_LIBRARIES_DEBUG} CACHE PATH "debug and release version of library" FORCE)
        ENDIF(LEARNINGMACHINE_LIBRARIES_DEBUG AND LEARNINGMACHINE_LIBRARIES_RELEASE)
    
        MARK_AS_ADVANCED(LEARNINGMACHINE_LIBRARIES_RELEASE)
        MARK_AS_ADVANCED(LEARNINGMACHINE_LIBRARIES_DEBUG)
    
      ENDIF(NOT LEARNINGMACHINE_LIBRARIES)
    
    ENDIF(NESTED_BUILD)

    # Add YARP dependencies
    FIND_PACKAGE(YARP)
    SET(LEARNINGMACHINE_LIBRARIES ${LEARNINGMACHINE_LIBRARIES} ${YARP_LIBRARIES})
    
    IF(LEARNINGMACHINE_INCLUDE_DIRS AND LEARNINGMACHINE_LIBRARIES)
       SET(LEARNINGMACHINE_FOUND TRUE)
    ELSE(LEARNINGMACHINE_INCLUDE_DIRS AND LEARNINGMACHINE_LIBRARIES)
       SET(LEARNINGMACHINE_FOUND FALSE)
    ENDIF(LEARNINGMACHINE_INCLUDE_DIRS AND LEARNINGMACHINE_LIBRARIES)
    
ENDIF(NOT LEARNINGMACHINE_FOUND)
