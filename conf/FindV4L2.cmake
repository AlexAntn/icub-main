
include(FindPackageHandleStandardArgs)

IF (V4L2_INCLUDE_DIR AND V4L2_LIBRARY)
    # Already in cache, be silent
#    SET (LIBV4L2_FIND_QUIETLY TRUE)
ENDIF (V4L2_INCLUDE_DIR AND V4L2_LIBRARY)

IF (NOT V4L2_FOUND)
  FIND_PATH    (V4L2_CORE_INCLUDE_DIR libv4l2.h)
  FIND_LIBRARY (V4L2_CORE_LIBRARY NAMES v4l2)

  FIND_PATH    (V4L2_CONVERT_INCLUDE_DIR libv4lconvert.h)
  FIND_LIBRARY (V4L2_CONVERT_LIBRARY NAMES v4lconvert)

  IF (V4L2_CORE_INCLUDE_DIR AND V4L2_CORE_LIBRARY AND V4L2_CONVERT_INCLUDE_DIR AND V4L2_CONVERT_LIBRARY)
    SET (V4L2_FOUND TRUE)
  ENDIF(V4L2_CORE_INCLUDE_DIR AND V4L2_CORE_LIBRARY AND V4L2_CONVERT_INCLUDE_DIR AND V4L2_CONVERT_LIBRARY)
ENDIF ( NOT V4L2_FOUND)


IF( V4L2_FOUND )
    set(V4L2_LIBRARIES    ${V4L2_CORE_LIBRARY}     ${V4L2_CONVERT_LIBRARY})
    set(V4L2_INCLUDE_DIRS ${V4L2_CORE_INCLUDE_DIR} ${V4L2_CONVERT_INCLUDE_DIR})

    unset(V4L2_CORE_LIBRARY CACHE)
    unset(V4L2_CONVERT_LIBRARY CACHE)
    unset(V4L2_CORE_INCLUDE_DIR CACHE)
    unset(V4L2_CONVERT_INCLUDE_DIR CACHE)

    IF( NOT LIBV4L2_FIND_QUIETLY )
    MESSAGE( STATUS "Found LIBV4L2: ${V4L2_LIBRARY}")
  ENDIF( NOT LIBV4L2_FIND_QUIETLY )
else( V4L2_FOUND )
  IF( NOT LIBV4L2_FIND_QUIETLY )
    MESSAGE( STATUS "LIBV4L2 was NOT found")
  ENDIF( NOT LIBV4L2_FIND_QUIETLY )
ENDIF( V4L2_FOUND )
